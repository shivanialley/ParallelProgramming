MPI ---> Message Passing Interface
    is a library specification for mesaage Passing
        Cluster of system through network
            Launches an application on multiple hosts
            Open MPI Project is an opne source project for Message Passing Interface implementation. 
                This project is developed and maintained by an consortium(group) of academic, research and industry partners.
                It is for High Performance Computing (HPC)

                Python program that we use mpi4py module has to run using MPI interpreter which is provided with mpirun command.
                 In some system(OS) instead of mpirun we may have to use mpiexec command

                 1. Simple hello world...using mpi4py
                 2. differentiation each process based on rank
                 3. Simple send/recv data between two processes


Next is 
    Broad Casting....
        Broadcasting is sending one data (exact copy) to all processes on the communicator...
        IF we give core it is maximum value but use whatever it is available
    
    Scatter
        takes a range of data and sends distribute the data accross different ranks

    Gather 
        is opposite of Scatter  
            which takes subset of array that are distributive across the ranks and gathers them into a full array


    PASL --->parsl
        Parsl is a Python native library that allows to write and execute parallel functions, brong together dependencies
        Parsl wraps Python functions as applications/apps which can be used as decorators for example
            @functionName --> decorators in Python
            
            @python_app
            def fun():
                pass
            wraps the fun as Python application

            @bash_app
            def fun():
                pass
            wraps the fun as bash(Bourne Again Shell) app


    Before getting on with further examples....
        let us revise some basics....
            in python
            in bash
                What is Shell?
                    ---> Shell is said to be a command interpreter
                    When you are working or interacting with OS....
                        there are two interfaces....
                            GUI --> Graphical User Interface
                            CLI ---> Command Line Interface
                                in windows ---> command prompt
                                in UNIX?LINUX ---> Shell
                    When interacting with shell...
                        input ---> standard Input file/device -->stdin --->0
                        ouput ---> standard Output file/device -->stdout --->1
                        error ---> standard Error file/device -->stderr --->2

                In C    
                    stdin, stdout, stderror
                In C++ 
                    cin, cout, cerr
                In Python 
                    From sys import stdin, stdout, stderr

                That is by default
                     all input is from keyword(stdin)
                     all ouput is to console (stdout)
                     all errors is to console (stderr)


                     wc -- line count   word count  charcter count
                     wc -l ---- line count


                IO Redirection...
                    < --> input /read from file
                    > --> output /write into a file (overwrite)
                    >> --> output /append into a file


